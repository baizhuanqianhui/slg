<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:aop="http://www.springframework.org/schema/aop"   
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"   
       xmlns:tx="http://www.springframework.org/schema/tx"   
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"> 
    <!-- quartz的调度工厂 调度工厂只能有一个，多个调度任务在list中添加 -->
     <!--  总管理类如果将lazy-init='false'那么容器启动就会执行调度程序   -->  
    <bean name="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>  
                <ref bean="myJobTrigger" />  
            </list>  
        </property>  
    </bean>  
    <!-- 启动触发器的配置结束 -->  
      <!-- quartz-2.x的配置 -->  
    <bean id="myJobTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail"  ref="myJobDetail" />  
        <property name="cronExpression">  
            <!-- 每天早上8点执行任务调度 -->
			<value>0 35 12 * * ?</value>
        </property> 
         <!-- <property name="repeatCount" value="0" />  -->
    </bean>  
    <!-- 调度的配置结束 -->  
  
    <!-- job的配置开始 -->  
    <bean id="myJobDetail"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject" ref="myPrintSchedule" /> <!-- 需要工作的bean -->
		<property name="targetMethod" value="printSomething" /> <!--具体执行的方法名字  -->
		<property name="concurrent" value="false" /> <!-- 并发设置-->
		<property name="arguments" value="argsValue"/><!-- 可传参数 -->
    </bean>  
    <!-- job的配置结束 -->  
    <!-- 工作的bean -->  
    <bean id="myPrintSchedule" class="com.slg.batch.TestBatch" />  

</beans>